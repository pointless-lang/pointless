ops = chars(import "text:hello.bf")

stack = []
jumps = {}

for index, op in ops do
  if op == "[" then
    stack |= push(index)
  elif op == "]" then
    jumps[stack[-1]] = index
    jumps[index] = stack[-1]
    stack |= List.pop
  end
end

vm = {
  ops,
  ip: 0,
  dp: 0,
  data: [0, 0, 0, 0, 0, 0, 0, 0],
  jumps,
}

fn runOp(vm)
  op = vm.ops[vm.ip]
  byte = vm.data[vm.dp]

  match op
    case ">" then vm.dp += 1
    case "<" then vm.dp -= 1
    case "+" then vm.data[vm.dp] += 1
    case "-" then vm.data[vm.dp] -= 1
    case "." then Console.write(Char.of(byte))
    case "," then Panic.unimplemented()
  end

  if op == "[" and byte == 0 or op == "]" and byte != 0 then
    vm.ip = vm.jumps[vm.ip]
  else
    vm.ip += 1
  end

  vm
end

while vm.ip < len(vm.ops) do
  vm |= runOp
end
